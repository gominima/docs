{
	"Meta": {
		"Generator": "1",
		"Format": "1",
		"Date": "2022-02-07 12:21:12.060651283 +0000 UTC m=+0.000112402"
	},
	"Functions": [
		{
			"Name": "NewConfig",
			"Line": "func NewConfig() *Config",
			"Description": "Make a new default config instance",
			"Returns": {
				"Type": "Config"
			}
		},
		{
			"Name": "use",
			"Line": "func use() *Plugins",
			"Description": "Initialise the plugins interface",
			"Returns": {}
		},
		{
			"Name": "New",
			"Line": "func New() *minima",
			"Description": "Make a new default minima instance",
			"Returns": {
				"Type": "minima"
			}
		},
		{
			"Name": "request",
			"Line": "func request(httpRequest *http.Request) *Request",
			"Description": "Make a new default request instance",
			"Parameters": [
				{
					"Name": "http.Request",
					"Type": "http.Request",
					"Description": "The net/http request instance"
				}
			],
			"Returns": {
				"Type": "Request"
			}
		},
		{
			"Name": "NewResHeader",
			"Line": "func NewResHeader(res http.ResponseWriter, req *http.Request) *OutgoingHeader",
			"Description": "Make a new default request header instance",
			"Parameters": [
				{
					"Name": "req",
					"Type": "http.Request",
					"Description": "The net/http request instance"
				},
				{
					"Name": "res",
					"Type": "http.ResponseWriter",
					"Description": "The net/http response instance"
				}
			],
			"Returns": {
				"Type": "OutgoingHeader"
			}
		},
		{
			"Name": "response",
			"Line": "func response(rw http.ResponseWriter, req *http.Request, props *map[string]interface}) *Response",
			"Description": "Make a new default response instance",
			"Parameters": [
				{
					"Name": "req",
					"Type": "http.Request",
					"Description": "The net/http request instance"
				},
				{
					"Name": "rs",
					"Type": "http.ResponseWriter",
					"Description": "The net/http response instance"
				},
				{
					"Name": "props",
					"Type": "map[string]interface{",
					"Description": "}  The net/http response instance"
				}
			],
			"Returns": {
				"Type": "Response"
			}
		},
		{
			"Name": "NewRouter",
			"Line": "func NewRouter() *Router",
			"Description": "Make new default router interface",
			"Returns": {}
		},
		{
			"Name": "RegexPath",
			"Line": "func RegexPath(path string) (string, []string)",
			"Description": "Compiles path to regex",
			"Parameters": [
				{
					"Name": "path",
					"Type": "string",
					"Description": "The route path"
				}
			],
			"Returns": {}
		}
	],
	"Structures": [
		{
			"Name": "Config",
			"Line": "type Config struct",
			"Description": "The config structure",
			"Properties": [
				{
					"Name": "Middleware",
					"Type": "[]Handler",
					"Description": "The plugins to be used"
				},
				{
					"Name": "bool",
					"Type": "Logger",
					"Description": "Whether logger is enabled or not"
				},
				{
					"Name": "router",
					"Type": "Router",
					"Description": "The router instance to be used"
				}
			]
		},
		{
			"Name": "Middleware",
			"Line": "type Middleware struct",
			"Description": "The Middleware structure",
			"Properties": [
				{
					"Name": "handler",
					"Type": "Handler",
					"Description": "The handler to be used"
				},
				{
					"Name": "israw",
					"Type": "bool",
					"Description": "Whether the handler is raw net/http or not"
				},
				{
					"Name": "rawHandler",
					"Type": "rawHandle",
					"Description": "The raw handler to be used"
				}
			]
		},
		{
			"Name": "Plugins",
			"Line": "type Plugins struct",
			"Description": "The Plugins structure",
			"Properties": [
				{
					"Name": "plugin",
					"Type": "Middleware",
					"Description": "The plugin"
				}
			]
		},
		{
			"Name": "minima",
			"Line": "type minima struct",
			"Description": "The framework structure",
			"Properties": [
				{
					"Name": "server",
					"Type": "*http.Server",
					"Description": "The net/http stock server"
				},
				{
					"Name": "started",
					"Type": "bool",
					"Description": "Whether the server has started or not"
				},
				{
					"Name": "Timeout",
					"Type": "*time.Duration",
					"Description": "The router's breathing time"
				},
				{
					"Name": "router",
					"Type": "*Router",
					"Description": "The core router instance running with the server"
				},
				{
					"Name": "properties",
					"Type": "map[string]interface{",
					"Description": "}  The properties for the server instance"
				},
				{
					"Name": "Config",
					"Type": "*Config",
					"Description": "The core config file for middlewares and router instances"
				},
				{
					"Name": "drain",
					"Type": "*time.Duration",
					"Description": "The router's drain time"
				}
			]
		},
		{
			"Name": "mux",
			"Line": "type mux struct",
			"Description": "The mux structure",
			"Properties": [
				{
					"Name": "Path",
					"Type": "string",
					"Description": "The path to match"
				},
				{
					"Name": "Params",
					"Type": "[]string",
					"Description": "The params to use"
				},
				{
					"Name": "Regex",
					"Type": "regexp.Regexp",
					"Description": "The regex to use"
				},
				{
					"Name": "Handlers",
					"Type": "[]Handler",
					"Description": "The handlers to use"
				}
			]
		},
		{
			"Name": "ReqHeader",
			"Line": "type ReqHeader struct",
			"Description": "The request headers structure",
			"Properties": [
				{
					"Name": "key",
					"Type": "string",
					"Description": "Key for the header"
				},
				{
					"Name": "value",
					"Type": "string",
					"Description": "Value of the header"
				}
			]
		},
		{
			"Name": "IncomingHeader",
			"Line": "type IncomingHeader struct",
			"Description": "The Incoming header structure",
			"Properties": [
				{
					"Name": "headers",
					"Type": "[]*ReqHeader",
					"Description": "Array of request headers"
				}
			]
		},
		{
			"Name": "Param",
			"Line": "type Param struct",
			"Description": "The request param structure",
			"Properties": [
				{
					"Name": "Path",
					"Type": "string",
					"Description": "Route path of the param"
				},
				{
					"Name": "key",
					"Type": "string",
					"Description": "Key for the param"
				},
				{
					"Name": "value",
					"Type": "string",
					"Description": "Value of the param"
				}
			]
		},
		{
			"Name": "Request",
			"Line": "type Request struct",
			"Description": "The request structure",
			"Properties": [
				{
					"Name": "ref",
					"Type": "*http.Request",
					"Description": "The net/http request instance"
				},
				{
					"Name": "fileReader",
					"Type": "multipart.Reader",
					"Description": "file reader instance"
				},
				{
					"Name": "body",
					"Type": "map[string][]string",
					"Description": "Value of the request body"
				},
				{
					"Name": "method",
					"Type": "string",
					"Description": "Request method"
				},
				{
					"Name": "Params",
					"Type": "[]*Params",
					"Description": "Request path parameters"
				},
				{
					"Name": "url.Values",
					"Type": "query",
					"Description": "Request path query params"
				},
				{
					"Name": "header",
					"Type": "IncomingHeader",
					"Description": "Incoming headers of the request"
				},
				{
					"Name": "json",
					"Type": "json.Decoder",
					"Description": "Json decoder instance"
				}
			]
		},
		{
			"Name": "OutgoingHeader",
			"Line": "type OutgoingHeader struct",
			"Description": "The Outgoing header structure",
			"Properties": [
				{
					"Name": "req",
					"Type": "http.Request",
					"Description": "The net/http request instance"
				},
				{
					"Name": "res",
					"Type": "http.ResponseWriter",
					"Description": "The net/http response instance"
				},
				{
					"Name": "body",
					"Type": "bool",
					"Description": "Whether body has been sent or not"
				},
				{
					"Name": "status",
					"Type": "int",
					"Description": "response status code"
				}
			]
		},
		{
			"Name": "Response",
			"Line": "type Response struct",
			"Description": "The response instance structure",
			"Properties": [
				{
					"Name": "ref",
					"Type": "http.ResponseWriter",
					"Description": "The net/http response instance"
				},
				{
					"Name": "url",
					"Type": "string",
					"Description": "The route url"
				},
				{
					"Name": "method",
					"Type": "string",
					"Description": "The route http method"
				},
				{
					"Name": "header",
					"Type": "OutgoingHeader",
					"Description": "The response header instance"
				},
				{
					"Name": "props",
					"Type": "*map[string]interface{",
					"Description": "}  The minima instance props"
				},
				{
					"Name": "host",
					"Type": "string",
					"Description": "The minima host"
				},
				{
					"Name": "HasEnded",
					"Type": "bool",
					"Description": "Whether the response has ended"
				}
			]
		},
		{
			"Name": "Router",
			"Line": "type Router struct",
			"Description": "The router structure",
			"Properties": [
				{
					"Name": "route",
					"Type": "map[string][]*mux",
					"Description": "The mux routes"
				}
			]
		}
	]
}